%!PS-Adobe-2.0
%%Title: lagrange.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Dec 31 12:26:18 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (lagrange.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (spav)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Dec 31 12:26:18 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
714 280 M
63 0 V
6213 0 R
-63 0 V
630 280 M
(-1) Rshow
1.000 UL
LTb
714 1045 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
(-0.5) Rshow
1.000 UL
LTb
714 1811 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 0) Rshow
1.000 UL
LTb
714 2576 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 0.5) Rshow
1.000 UL
LTb
714 3341 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 1) Rshow
1.000 UL
LTb
714 4107 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 1.5) Rshow
1.000 UL
LTb
714 4872 M
63 0 V
6213 0 R
-63 0 V
-6297 0 R
( 2) Rshow
1.000 UL
LTb
714 280 M
0 63 V
0 4529 R
0 -63 V
714 140 M
( 0) Cshow
1.000 UL
LTb
1611 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 0.5) Cshow
1.000 UL
LTb
2507 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 1) Cshow
1.000 UL
LTb
3404 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 1.5) Cshow
1.000 UL
LTb
4300 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 2) Cshow
1.000 UL
LTb
5197 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 2.5) Cshow
1.000 UL
LTb
6093 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 3) Cshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
0 -4669 R
( 3.5) Cshow
1.000 UL
LTb
1.000 UL
LTb
714 4872 N
714 280 L
6276 0 V
0 4592 V
-6276 0 V
Z stroke
1.000 UP
1.000 UL
LTb
2.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6339 4739 M
(l0\(x\)) Rshow
LT0
6423 4739 M
399 0 V
982 280 M
49 134 V
63 168 V
64 165 V
63 160 V
64 157 V
63 153 V
63 150 V
64 145 V
63 142 V
64 137 V
63 134 V
63 130 V
64 127 V
63 122 V
63 119 V
64 114 V
63 111 V
64 108 V
63 103 V
63 99 V
64 96 V
63 92 V
64 88 V
63 84 V
63 80 V
64 77 V
63 73 V
64 68 V
63 65 V
63 62 V
64 57 V
63 54 V
64 49 V
63 46 V
63 42 V
64 39 V
63 34 V
64 31 V
63 27 V
63 22 V
64 20 V
63 15 V
64 11 V
63 8 V
63 4 V
64 0 V
63 -4 V
63 -8 V
64 -11 V
63 -15 V
64 -20 V
63 -22 V
63 -27 V
64 -31 V
63 -34 V
64 -39 V
63 -42 V
63 -46 V
64 -49 V
63 -54 V
64 -57 V
63 -62 V
63 -65 V
64 -68 V
63 -73 V
64 -77 V
63 -80 V
63 -84 V
64 -88 V
63 -92 V
64 -96 V
63 -99 V
63 -103 V
64 -108 V
63 -111 V
64 -114 V
63 -119 V
63 -122 V
64 -127 V
63 -130 V
63 -134 V
64 -137 V
63 -142 V
64 -145 V
63 -150 V
63 -153 V
64 -157 V
63 -160 V
64 -165 V
63 -168 V
49 -134 V
stroke
LT2
/Helvetica findfont 140 scalefont setfont
LTb
6339 4599 M
(l1\(x\)) Rshow
LT2
6423 4599 M
399 0 V
946 4872 M
22 -56 V
63 -159 V
63 -157 V
64 -153 V
63 -150 V
64 -147 V
63 -144 V
63 -141 V
64 -138 V
63 -135 V
64 -132 V
63 -129 V
63 -126 V
64 -122 V
63 -120 V
63 -116 V
64 -114 V
63 -110 V
64 -108 V
63 -104 V
63 -101 V
64 -98 V
63 -95 V
64 -92 V
63 -89 V
63 -86 V
64 -83 V
63 -80 V
64 -77 V
63 -73 V
63 -71 V
64 -68 V
63 -64 V
64 -62 V
63 -58 V
63 -55 V
64 -53 V
63 -49 V
64 -46 V
63 -43 V
63 -40 V
64 -37 V
63 -34 V
64 -31 V
63 -27 V
63 -25 V
64 -22 V
63 -18 V
63 -16 V
64 -12 V
63 -10 V
64 -6 V
63 -3 V
63 -1 V
64 3 V
63 6 V
64 9 V
63 12 V
63 15 V
64 18 V
63 22 V
64 24 V
63 27 V
63 31 V
64 33 V
63 37 V
64 39 V
63 43 V
63 45 V
64 49 V
63 52 V
64 55 V
63 58 V
63 61 V
64 64 V
63 67 V
64 70 V
63 73 V
63 77 V
64 79 V
63 83 V
63 85 V
64 89 V
63 91 V
64 95 V
63 98 V
63 100 V
64 104 V
63 107 V
64 110 V
63 113 V
63 116 V
64 119 V
63 123 V
64 125 V
63 128 V
stroke
LT6
/Helvetica findfont 140 scalefont setfont
LTb
6339 4459 M
(l2\(x\)) Rshow
LT6
6423 4459 M
399 0 V
714 1964 M
63 -16 V
64 -15 V
63 -15 V
64 -13 V
63 -13 V
63 -12 V
64 -11 V
63 -11 V
64 -9 V
63 -9 V
63 -9 V
64 -7 V
63 -7 V
64 -6 V
63 -5 V
63 -4 V
64 -4 V
63 -3 V
63 -2 V
64 -1 V
63 0 V
64 0 V
63 1 V
63 2 V
64 2 V
63 3 V
64 4 V
63 5 V
63 6 V
64 6 V
63 7 V
64 8 V
63 9 V
63 9 V
64 10 V
63 11 V
64 12 V
63 12 V
63 14 V
64 14 V
63 14 V
64 16 V
63 16 V
63 17 V
64 18 V
63 19 V
64 19 V
63 20 V
63 21 V
64 22 V
63 22 V
63 23 V
64 24 V
63 25 V
64 25 V
63 27 V
63 27 V
64 27 V
63 29 V
64 29 V
63 30 V
63 31 V
64 32 V
63 32 V
64 33 V
63 34 V
63 35 V
64 35 V
63 36 V
64 37 V
63 38 V
63 38 V
64 40 V
63 40 V
64 40 V
63 42 V
63 42 V
64 43 V
63 44 V
64 45 V
63 45 V
63 46 V
64 47 V
63 48 V
63 48 V
64 49 V
63 50 V
64 51 V
63 52 V
63 52 V
64 53 V
63 54 V
64 54 V
63 56 V
63 56 V
64 57 V
63 57 V
64 59 V
63 59 V
stroke
1.000 UL
LT6
714 3341 Pnt
777 3341 Pnt
841 3341 Pnt
904 3341 Pnt
968 3341 Pnt
1031 3341 Pnt
1094 3341 Pnt
1158 3341 Pnt
1221 3341 Pnt
1285 3341 Pnt
1348 3341 Pnt
1411 3341 Pnt
1475 3341 Pnt
1538 3341 Pnt
1602 3341 Pnt
1665 3341 Pnt
1728 3341 Pnt
1792 3341 Pnt
1855 3341 Pnt
1918 3341 Pnt
1982 3341 Pnt
2045 3341 Pnt
2109 3341 Pnt
2172 3341 Pnt
2235 3341 Pnt
2299 3341 Pnt
2362 3341 Pnt
2426 3341 Pnt
2489 3341 Pnt
2552 3341 Pnt
2616 3341 Pnt
2679 3341 Pnt
2743 3341 Pnt
2806 3341 Pnt
2869 3341 Pnt
2933 3341 Pnt
2996 3341 Pnt
3060 3341 Pnt
3123 3341 Pnt
3186 3341 Pnt
3250 3341 Pnt
3313 3341 Pnt
3377 3341 Pnt
3440 3341 Pnt
3503 3341 Pnt
3567 3341 Pnt
3630 3341 Pnt
3694 3341 Pnt
3757 3341 Pnt
3820 3341 Pnt
3884 3341 Pnt
3947 3341 Pnt
4010 3341 Pnt
4074 3341 Pnt
4137 3341 Pnt
4201 3341 Pnt
4264 3341 Pnt
4327 3341 Pnt
4391 3341 Pnt
4454 3341 Pnt
4518 3341 Pnt
4581 3341 Pnt
4644 3341 Pnt
4708 3341 Pnt
4771 3341 Pnt
4835 3341 Pnt
4898 3341 Pnt
4961 3341 Pnt
5025 3341 Pnt
5088 3341 Pnt
5152 3341 Pnt
5215 3341 Pnt
5278 3341 Pnt
5342 3341 Pnt
5405 3341 Pnt
5469 3341 Pnt
5532 3341 Pnt
5595 3341 Pnt
5659 3341 Pnt
5722 3341 Pnt
5786 3341 Pnt
5849 3341 Pnt
5912 3341 Pnt
5976 3341 Pnt
6039 3341 Pnt
6102 3341 Pnt
6166 3341 Pnt
6229 3341 Pnt
6293 3341 Pnt
6356 3341 Pnt
6419 3341 Pnt
6483 3341 Pnt
6546 3341 Pnt
6610 3341 Pnt
6673 3341 Pnt
6736 3341 Pnt
6800 3341 Pnt
6863 3341 Pnt
6927 3341 Pnt
6990 3341 Pnt
1.000 UL
LT2
714 1811 Pnt
777 1811 Pnt
841 1811 Pnt
904 1811 Pnt
968 1811 Pnt
1031 1811 Pnt
1094 1811 Pnt
1158 1811 Pnt
1221 1811 Pnt
1285 1811 Pnt
1348 1811 Pnt
1411 1811 Pnt
1475 1811 Pnt
1538 1811 Pnt
1602 1811 Pnt
1665 1811 Pnt
1728 1811 Pnt
1792 1811 Pnt
1855 1811 Pnt
1918 1811 Pnt
1982 1811 Pnt
2045 1811 Pnt
2109 1811 Pnt
2172 1811 Pnt
2235 1811 Pnt
2299 1811 Pnt
2362 1811 Pnt
2426 1811 Pnt
2489 1811 Pnt
2552 1811 Pnt
2616 1811 Pnt
2679 1811 Pnt
2743 1811 Pnt
2806 1811 Pnt
2869 1811 Pnt
2933 1811 Pnt
2996 1811 Pnt
3060 1811 Pnt
3123 1811 Pnt
3186 1811 Pnt
3250 1811 Pnt
3313 1811 Pnt
3377 1811 Pnt
3440 1811 Pnt
3503 1811 Pnt
3567 1811 Pnt
3630 1811 Pnt
3694 1811 Pnt
3757 1811 Pnt
3820 1811 Pnt
3884 1811 Pnt
3947 1811 Pnt
4010 1811 Pnt
4074 1811 Pnt
4137 1811 Pnt
4201 1811 Pnt
4264 1811 Pnt
4327 1811 Pnt
4391 1811 Pnt
4454 1811 Pnt
4518 1811 Pnt
4581 1811 Pnt
4644 1811 Pnt
4708 1811 Pnt
4771 1811 Pnt
4835 1811 Pnt
4898 1811 Pnt
4961 1811 Pnt
5025 1811 Pnt
5088 1811 Pnt
5152 1811 Pnt
5215 1811 Pnt
5278 1811 Pnt
5342 1811 Pnt
5405 1811 Pnt
5469 1811 Pnt
5532 1811 Pnt
5595 1811 Pnt
5659 1811 Pnt
5722 1811 Pnt
5786 1811 Pnt
5849 1811 Pnt
5912 1811 Pnt
5976 1811 Pnt
6039 1811 Pnt
6102 1811 Pnt
6166 1811 Pnt
6229 1811 Pnt
6293 1811 Pnt
6356 1811 Pnt
6419 1811 Pnt
6483 1811 Pnt
6546 1811 Pnt
6610 1811 Pnt
6673 1811 Pnt
6736 1811 Pnt
6800 1811 Pnt
6863 1811 Pnt
6927 1811 Pnt
6990 1811 Pnt
1.000 UL
LTb
714 4872 N
714 280 L
6276 0 V
0 4592 V
-6276 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
